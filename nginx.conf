upstream aiohttp {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # Unix domain servers
    #server unix:/tmp/chat_1.sock fail_timeout=5;
    #server unix:/tmp/chat_2.sock fail_timeout=5;
    #server unix:/tmp/chat_3.sock fail_timeout=5;
    #server unix:/tmp/chat_4.sock fail_timeout=5;

    # Unix domain sockets are used in this example due to their high performance,
    # but TCP/IP sockets could be used instead:
    server 127.0.0.2:8081 fail_timeout=0;
    #server 127.0.0.2:8082 fail_timeout=2;
    #server 127.0.0.2:8083 fail_timeout=2;
    #server 127.0.0.2:8084 fail_timeout=2;
}

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root <PROJECT PATH>;

        location ~ /.well-known {
                allow all;
        }
}

server {
    # SSL configuration

    server_name <DOMAIN NAME>;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    # include snippets/snakeoil.conf;
    include snippets/ssl-<DOMAIN NAME>.conf;
    include snippets/ssl-params.conf;

    # log section
    access_log /var/log/nginx/chat_https.access_log;
    error_log /var/log/nginx/chat_https.error_log;

    # Redirect all non-SSL traffic to SSL.
    if ($ssl_protocol = "") {
      rewrite ^ https://$host$request_uri? permanent;
    }

    location / {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_pass http://aiohttp;
    }

    location /static {
        alias <PROJECT PATH>/static;
        expires 30d;
    }
}

