[supervisord]
logfile=/var/log/supervisor/supervisord.log     ; supervisord log file
logfile_maxbytes=50MB                           ; maximum size of logfile before rotation
logfile_backups=10                              ; number of backed up logfiles
loglevel=error                                  ; info, debug, warn, trace
pidfile=/var/run/supervisord.pid                ; pidfile location
nodaemon=false                                  ; run supervisord as a daemon
minfds=1024                                     ; number of startup file descriptors
minprocs=200                                    ; number of process descriptors
user=root                                       ; default user
childlogdir=/var/log/supervisor/                ; where child log files will live

[program:aiohttp]
numprocs = 4
numprocs_start = 1
process_name = chat_%(process_num)s

environment=PATH="/<path_to_project>/venv/bin/python"
; Unix socket paths are specified by command line.
; cmd=/<path_to_project>/venv/bin/python /<path_to_project>/simple_chat.py --path=/tmp/chat_%(process_num)s.sock

; We can just as easily pass TCP port numbers:
command=/<path_to_project>/venv/bin/python /<path_to_project>/simple_chat.py --port=808%(process_num)s

directory=/<path_to_project>/
user=<USER NAME>
redirect_stderr=True

; !!!! You should create dirs before start sending logs !!!!
; mkdir -p /<path_to_project>/logs/chat

stdout_logfile=/<path_to_project>/logs/chat/chat_aiohttp.log
stderr_logfile=/<path_to_project>/logs/chat/chat_aiohttp_err.log
autostart=true
autorestart=true
startsecs=10
stopwaitsecs=10
priority=999

